name: Spacegame.ACR

on:
  workflow_dispatch: 
  push:
    branches: main

jobs:
  leaderboardpush:
    name: üêã Build and Push to ACR (API)
    runs-on: ubuntu-latest    
    steps:
      
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Login to Azure Container Registry
        uses: docker/login-action@v1
        with:
          registry: acrmilaha.azurecr.io
          username: acrmilaha
          password: ${{ secrets.ACR_PASSWORD }}
          
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y.%m.%d')"
        
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Tailspin.SpaceGame.LeaderboardContainer/Dockerfile
          push: true
          tags: |
            acrmilaha.azurecr.io/leaderboard:latest
            acrmilaha.azurecr.io/leaderboard:${{ steps.date.outputs.date }}.${{ github.run_number }}
       
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
#-----------------------------------------------------------------------------------------------------------
  spacegamepush:
    name: üêã Build and Push to ACR (Web)
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Login to Azure Container Registry
        uses: docker/login-action@v1
        with:
          registry: acrmilaha.azurecr.io
          username: acrmilaha
          password: ${{ secrets.ACR_PASSWORD }}
          
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y.%m.%d')"
      
      - name: Configure App Settings
        uses: cschleiden/replace-tokens@v1
        with: 
         files: '["Tailspin.SpaceGame.Web/appsettings.json"]'
        env:
         LEADERBOARD_API_URL: ${{secrets.API_CLUSTER_IP}}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Tailspin.SpaceGame.Web/Dockerfile
          push: true
          tags: |
            acrmilaha.azurecr.io/spacegameweb:latest
            acrmilaha.azurecr.io/spacegameweb:${{ steps.date.outputs.date }}.${{ github.run_number }}
          
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
        
#-------------------------------------------------------------------------------------------------------------     
  tailspin-web-scan:
    name: üîÜ Anchore Analyse Web
    runs-on: ubuntu-latest
    needs: spacegamepush
    continue-on-error: true
    steps:
      
    - name: Checkout the code
      uses: actions/checkout@v2
      
    - name: Build taispin-web image
      run: docker build . --file Tailspin.SpaceGame.Web/Dockerfile --tag localbuild/webtestimage:latest
      
    - name: Anchor Scan Web image
      uses: anchore/scan-action@main
      with:
        image: "localbuild/webtestimage:latest"
        acs-report-enable: true
         
    - name: Upload Anchore Scan Report
      if: always()
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: results.sarif
        
 #=================================================================================================     
   
  tailspin-leaderboards-scan:
    name: üîÜ Anchore Analyse API
    runs-on: ubuntu-latest
    needs: leaderboardpush
    continue-on-error: true
    steps:
    
    - name: Checkout the code
      uses: actions/checkout@v2
      
    - name: Build tailspin-leaderboards image
      run: docker build . --file Tailspin.SpaceGame.LeaderboardContainer//Dockerfile --tag localbuild/leaderboardstestimage:latest
          
    - name: Anchor Scan Leaderboards image
      uses: anchore/scan-action@main
      with:
        image: "localbuild/leaderboardstestimage:latest"
        acs-report-enable: true 
        
    - name: Upload Anchore Scan Report
      if: always()
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: results.sarif  
#--------------------------------------------------------------------------------------------------------------------

  AKS_deploy:
    name: üöÄ Deploy to AKS (Web)
    environment: 
      name: aks-cluster
      url: http://20.93.175.48/
    runs-on: ubuntu-latest
    needs: tailspin-web-scan
    steps:
    
    - name: Checkout
      uses: actions/checkout@v2   
    
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y.%m.%d')"
    
    - name: Azure Login
      uses: Azure/login@v1
      with:
        creds: ${{ secrets.AKS_CRED }}
  
    - name: Azure Kubernetes set context
      uses: Azure/aks-set-context@v1
      with:
        creds: ${{ secrets.AKS_CRED}}
        resource-group: qatargas_rs
        cluster-name: aks-cluster
    
    - uses: azure/k8s-create-secret@v1
      name: Create imagepullsecret for ACR
      with:
        container-registry-url: acrmilaha.azurecr.io
        container-registry-username: ${{ secrets.ACR_USERNAME }}
        container-registry-password: ${{ secrets.ACR_PASSWORD }}
        secret-name: aks-connection
        
    - name: Deploy to Kubernetes cluster
      uses: Azure/k8s-deploy@v1
      with:       
        manifests: manifests/webdeployments.yml      
        images: acrmilaha.azurecr.io/spacegameweb:${{ steps.date.outputs.date }}.${{ github.run_number }}
        imagepullsecrets: |
          aks-connection
        force: true
  #---------------------------------------------------------------------------------------
  
  AKS_deploy_API:
    name: üöÄ Deploy to AKS (API)
    environment: 
      name: aks-cluster
      url: http://20.86.241.164/
    runs-on: ubuntu-latest
    needs: tailspin-leaderboards-scan
    steps:
    
    - name: Checkout
      uses: actions/checkout@v2   
    
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y.%m.%d')"
    
    - name: Azure Login
      uses: Azure/login@v1
      with:
        creds: ${{ secrets.AKS_CRED }}
  
    - name: Azure Kubernetes set context
      uses: Azure/aks-set-context@v1
      with:
        creds: ${{ secrets.AKS_CRED }}
        resource-group: qatargas_rs
        cluster-name: aks-cluster
    
    - uses: azure/k8s-create-secret@v1
      name: Create imagepullsecret for ACR
      with:
        container-registry-url: acrmilaha.azurecr.io
        container-registry-username: ${{ secrets.ACR_USERNAME }}
        container-registry-password: ${{ secrets.ACR_PASSWORD }}
        secret-name: aks-connection-api
        
    - name: Deploy to Kubernetes cluster
      uses: Azure/k8s-deploy@v1
      with:       
        manifests: manifests/webdeployments.yml      
        images: acrmilaha.azurecr.io/leaderboard:${{ steps.date.outputs.date }}.${{ github.run_number }}
        imagepullsecrets: |
          aks-connection-api
        force: true

        
