name: Spacegame.Web.New
on:
# push:
   #branches: [trunk]
   #paths-ignore:
   #- .github/**
  workflow_dispatch:

env:
  WEB_APP_NAME: 'spacewebgh'

jobs:
    build_web_app:
      name: üß™ Build Web App
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301
          
      - name: Configure App Settings
        uses: cschleiden/replace-tokens@v1
        with: 
          files: '["Tailspin.SpaceGame.Web/appsettings.json"]'
        env:
          LEADERBOARD_API_URL: https://${{env.API_APP_NAME}}.azurewebsites.net/api/Leaderboard
        
      - name: Restore dependencies
        run: dotnet restore
        working-directory: ./Tailspin.SpaceGame.Web
        
      - name: Build
        run: dotnet build --no-restore
        working-directory: ./Tailspin.SpaceGame.Web
      
      - name: Publish
        run: dotnet publish --no-restore -c Release
        working-directory: ./Tailspin.SpaceGame.Web
      
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.1
        with:
          name: spacegameweb
          path: ./Tailspin.SpaceGame.Web/bin/Release/netcoreapp3.1/publish/
      
    code-ql:
      name: ‚≠ïÔ∏è Security Scanning
      runs-on: ubuntu-latest
      needs: [build_web_app]
      strategy:
        fail-fast: false
        matrix:
          # Supported options are ['csharp', 'cpp', 'go', 'java', 'javascript', 'python']
          language: ['csharp', 'javascript']
      steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}

    web_app_deploy:
      name: üì¶ Deploy FrontEnd
      runs-on: ubuntu-latest
      environment: 
        name: Web App
        url: https://${{env.WEB_APP_NAME}}.azurewebsites.net/
      needs: [build_web_app, code-ql]
      
      steps:  
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.7
        with:
          name: spacegameweb
          
      - name: Azure WebApp
        uses: Azure/webapps-deploy@v2
        with:
          app-name: ${{env.WEB_APP_NAME}}
          package: . 
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_SPACEGH }}
    
    aws_deploy:
      name: üì¶ Deploy to AWS
      runs-on: ubuntu-latest
      environment: 
        name: Web App
        url: https://${{env.WEB_APP_NAME}}.azurewebsites.net/
      needs: [build_web_app, code-ql]
      
      steps:  
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.7
        with:
          name: spacegameweb 
          
      - name: Archive 
        shell: pwsh
        run: |
           Compress-Archive -Path */* -DestinationPath ${{github.workspace}}/tailspinpackage
           
      - run: ls
      
      - name: Deploy to AWS
        uses: einaregilsson/beanstalk-deploy@v17
        with:
          aws_access_key: ${{secrets.AWS_ACCESS_KEY}}
          aws_secret_key: ${{secrets.AWS_SECRET_KEY}}
          region: us-east-2
          application_name: tailspin
          version_label: tailspin-1.0
          deployment_package: tailspinpackage.zip
    
#    validate-web:
#      name: ‚úÖ Validate Web Deployment
#      runs-on: ubuntu-latest
#      needs: [web_app_deploy]
#      steps:
#      - name: Check the deployed service URL
#        uses: jtalk/url-health-check-action@v1.2
#        with:
#          url: https://${{ env.WEB_APP_NAME }}.azurewebsites.net/
#          follow-redirect: no
#         max-attempts: 3 
#          retry-delay: 5s 
